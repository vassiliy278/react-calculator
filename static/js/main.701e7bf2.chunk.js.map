{"version":3,"sources":["components/Result.js","components/Keyboard.js","App.js","index.js"],"names":["Result","log","resultNumber","className","length","id","Keyboard","handleNumberChange","handleOperatorChange","handleReset","handleBackspace","handleEqual","handlePercentage","onClick","App","state","enteredNumber","firstNumber","operator","percentage","e","setState","concat","slice","toString","Number","keyboardCyfral","key","window","addEventListener","removeEventListener","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.701e7bf2.chunk.js","sourcesContent":["import \"../App.css\";\nconst Result = ({ log, resultNumber }) => {\n  return (\n    <div className=\"result_wrapper\">\n      {log.length > 18 ? <p className=\"small_cyfrals\">{log}</p> : <p>{log}</p>}\n      <p id=\"preresult_field\">{resultNumber}</p>\n    </div>\n  );\n};\n\nexport default Result;\n","import \"../App.css\";\nconst Keyboard = ({\n  handleNumberChange,\n  handleOperatorChange,\n  handleReset,\n  handleBackspace,\n  handleEqual,\n  handlePercentage,\n}) => {\n  return (\n    <div className=\"buttons_wrapper\">\n      <button id=\"ac_btn\" onClick={() => handleReset()}>\n        AC\n      </button>\n      <button onClick={() => handleBackspace()}>&larr;</button>\n      <button id=\"percent_btn\" onClick={() => handlePercentage()}>\n        %\n      </button>\n      <button id=\"division_btn\" onClick={() => handleOperatorChange(\" / \")}>\n        /\n      </button>\n      <button onClick={() => handleNumberChange(7)}>7</button>\n      <button onClick={() => handleNumberChange(8)}>8</button>\n      <button onClick={() => handleNumberChange(9)}>9</button>\n      <button id=\"multiply_btn\" onClick={() => handleOperatorChange(\" * \")}>\n        *\n      </button>\n      <button onClick={() => handleNumberChange(4)}>4</button>\n      <button onClick={() => handleNumberChange(5)}>5</button>\n      <button onClick={() => handleNumberChange(6)}>6</button>\n      <button id=\"minus_btn\" onClick={() => handleOperatorChange(\" - \")}>\n        -\n      </button>\n      <button onClick={() => handleNumberChange(1)}>1</button>\n      <button onClick={() => handleNumberChange(2)}>2</button>\n      <button onClick={() => handleNumberChange(3)}>3</button>\n      <button id=\"add_btn\" onClick={() => handleOperatorChange(\" + \")}>\n        +\n      </button>\n      <button id=\"point_btn\" onClick={() => handleNumberChange(\".\")}>\n        .\n      </button>\n      <button onClick={() => handleNumberChange(0)}>0</button>\n      <button id=\"equal_btn\" onClick={() => handleEqual()}>\n        =\n      </button>\n    </div>\n  );\n};\n\nexport default Keyboard;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Result from \"./components/Result\";\nimport Keyboard from \"./components/Keyboard\";\n\nexport default class App extends Component {\n  state = {\n    enteredNumber: \"0\",\n    firstNumber: \"\",\n    operator: \"\",\n    resultNumber: \"\",\n    percentage: false,\n  };\n  handleNumberChange = (e) => {\n    const { operator, firstNumber, enteredNumber } = this.state;\n    if (enteredNumber[0] === \"0\") {\n      this.setState((state) => ({\n        enteredNumber: state.enteredNumber.concat(e).slice(1),\n      }));\n    } else {\n      this.setState((state) => ({\n        enteredNumber: state.enteredNumber.toString().concat(e),\n        resultNumber: state.enteredNumber.toString().concat(e),\n      }));\n    }\n    if (firstNumber) {\n      switch (operator) {\n        case \" + \":\n          {\n            this.setState((state) => ({\n              resultNumber:\n                Number(state.firstNumber) + Number(state.enteredNumber),\n            }));\n          }\n          break;\n        case \" - \":\n          {\n            this.setState((state) => ({\n              resultNumber:\n                Number(state.firstNumber) - Number(state.enteredNumber),\n            }));\n          }\n          break;\n        case \" * \":\n          {\n            this.setState((state) => ({\n              resultNumber:\n                Number(state.firstNumber) * Number(state.enteredNumber),\n            }));\n          }\n          break;\n        case \" / \":\n          {\n            this.setState((state) => ({\n              resultNumber:\n                Number(state.firstNumber) / Number(state.enteredNumber),\n            }));\n          }\n          break;\n      }\n    }\n  };\n\n  handleOperatorChange = (e) => {\n    const { enteredNumber, resultNumber } = this.state;\n\n    if (enteredNumber === \"0\") {\n      this.setState(() => ({\n        firstNumber: 0,\n      }));\n    }\n    if (!enteredNumber) {\n      this.setState((state) => ({\n        operator: e,\n        enteredNumber: state.firstNumber,\n      }));\n    }\n    if (resultNumber) {\n      this.setState((state) => ({\n        enteredNumber: state.resultNumber,\n      }));\n    }\n    this.setState((state) => ({\n      operator: e,\n      firstNumber: state.enteredNumber,\n      enteredNumber: \"\",\n    }));\n  };\n\n  handleReset = () => {\n    this.setState(() => ({\n      enteredNumber: \"0\",\n      firstNumber: \"\",\n      operator: \"\",\n      resultNumber: \"\",\n      percentage: false,\n    }));\n  };\n  handleBackspace = () => {\n    const { enteredNumber, firstNumber, operator } = this.state;\n    this.setState(() => ({\n      enteredNumber: enteredNumber.toString().slice(0, -1),\n      resultNumber: enteredNumber.toString().slice(0, -1),\n    }));\n\n    if (firstNumber) {\n      switch (operator) {\n        case \" + \":\n          {\n            this.setState((state) => ({\n              resultNumber:\n                Number(state.firstNumber) + Number(state.enteredNumber),\n            }));\n          }\n          break;\n        case \" - \":\n          {\n            this.setState((state) => ({\n              resultNumber:\n                Number(state.firstNumber) - Number(state.enteredNumber),\n            }));\n          }\n          break;\n        case \" * \":\n          {\n            this.setState((state) => ({\n              resultNumber:\n                Number(state.firstNumber) * Number(state.enteredNumber),\n            }));\n          }\n          break;\n        case \" / \":\n          {\n            this.setState((state) => ({\n              resultNumber:\n                Number(state.firstNumber) / Number(state.enteredNumber),\n            }));\n          }\n          break;\n      }\n    }\n  };\n  handleEqual = () => {\n    if (!this.state.firstNumber) {\n      return;\n    }\n    this.setState((state) => ({\n      enteredNumber: state.resultNumber,\n      operator: \"\",\n      firstNumber: \"\",\n      percentage: false,\n    }));\n  };\n  handlePercentage = () => {\n    const { operator, enteredNumber } = this.state;\n    if (operator && enteredNumber) {\n      this.setState(() => ({\n        percentage: true,\n      }));\n      switch (operator) {\n        case \" + \":\n          {\n            this.setState((state) => ({\n              resultNumber:\n                Number(state.firstNumber) +\n                (Number(state.firstNumber) * Number(state.enteredNumber)) / 100,\n            }));\n          }\n          break;\n        case \" - \":\n          {\n            this.setState((state) => ({\n              resultNumber:\n                Number(state.firstNumber) -\n                (Number(state.firstNumber) * Number(state.enteredNumber)) / 100,\n            }));\n          }\n          break;\n        case \" * \":\n          {\n            this.setState((state) => ({\n              resultNumber:\n                Number(state.firstNumber) *\n                ((Number(state.firstNumber) * Number(state.enteredNumber)) /\n                  100),\n            }));\n          }\n          break;\n        case \" / \":\n          {\n            this.setState((state) => ({\n              resultNumber:\n                Number(state.firstNumber) /\n                ((Number(state.firstNumber) * Number(state.enteredNumber)) /\n                  100),\n            }));\n          }\n          break;\n      }\n    }\n  };\n  //keyboard control implementation\n  keyboardCyfral = (e) => {\n    if (\n      e.key === \"1\" ||\n      e.key === \"2\" ||\n      e.key === \"3\" ||\n      e.key === \"4\" ||\n      e.key === \"5\" ||\n      e.key === \"6\" ||\n      e.key === \"7\" ||\n      e.key === \"8\" ||\n      e.key === \"9\" ||\n      e.key === \"0\" ||\n      e.key === \".\"\n    ) {\n      this.handleNumberChange(e.key);\n    }\n    if (e.key === \"*\" || e.key === \"/\" || e.key === \"+\" || e.key === \"-\") {\n      this.handleOperatorChange(` ${e.key} `);\n    }\n    if (e.key === \"Backspace\") {\n      this.handleBackspace();\n    }\n    if (e.key === \"Enter\") {\n      this.handleEqual();\n    }\n    if (e.key === \"%\") {\n      this.handlePercentage();\n    }\n    if (e.key === \"%\") {\n      this.handlePercentage();\n    }\n  };\n  componentDidMount() {\n    window.addEventListener(\"keydown\", (e) => this.keyboardCyfral(e));\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", (e) => this.keyboardCyfral(e));\n  }\n  componentDidUpdate() {\n    if (this.state.enteredNumber === \"\" && this.state.firstNumber === \"\") {\n      this.setState(() => ({\n        enteredNumber: \"0\",\n      }));\n    }\n  }\n  render() {\n    const {\n      firstNumber,\n      resultNumber,\n      operator,\n      enteredNumber,\n      percentage,\n    } = this.state;\n\n    return (\n      <>\n        <div className=\"wrapper_main\">\n          <Result\n            log={\n              firstNumber +\n              operator +\n              enteredNumber +\n              `${operator && percentage ? \"%\" : \"\"}`\n            }\n            resultNumber={resultNumber ? resultNumber : 0}\n          />\n          <Keyboard\n            handleNumberChange={this.handleNumberChange}\n            handleOperatorChange={this.handleOperatorChange}\n            handleReset={this.handleReset}\n            handleBackspace={this.handleBackspace}\n            handleEqual={this.handleEqual}\n            handlePercentage={this.handlePercentage}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}